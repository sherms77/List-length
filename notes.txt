ABOUT
# Pg.86 - How to think cs
# ref to /home/sherms/Python files/How to think_exercises/listLength/README_listLength.txt
# ref to /home/sherms/Python files/How to think_exercises/listLength/tests.txt

LINKS
1.020221: append list - https://www.programiz.com/python-programming/methods/list/append
2.040221: https://stackabuse.com/python-get-number-of-elements-in-a-list/

FAILED CODE

--Date: 040221-->
# tried this from link 2 to test if list comprehension will work.
# got error: TypeError: object of type 'int' has no len()

think = ['spam!', 1, ['Brie', 'Roquefort', 'Pol le Veq'], [1, 2 ,3, 4]]
>>> num = sum([len(element) for element in think])

--Date: 040221-->
think = ['spam!', 1, ['Brie', 'Roquefort', 'Pol le Veq'], [1, 2 ,3, 4]]

def unpack_list(l):
    y = int(len(l)) # upper range limit
    index = 0
    new = []
    j = []
    for i in range(y):
        # print(l[i]) # prints each element from the list.
        new.append(l[i]) 
        index += # does now work as intended. It adds the think list to j four times.         
        j.append(new)
        
    # print(new, '- This is the new list.')
    print('APPENDED NEW LIST TO j ', j)
    
    # 030221: UPTO HERE
    # print(len(j[i])) # this didn't work. need to run len function on it and count nested elements.

unpack_list(think)

--Date: 030221-->
think = ['spam!', 1, ['Brie', 'Roquefort', 'Pol le Veq'], [1, 2 ,3, 4]]
e = ['spam!', ['Brie', 'Roquefort', 'Pol le Veq'], [1, 2 ,3]] # list without standalone int 1

def unpack_list(l):
    y = int(len(l)) # upper range limit
    index = 0
    new = []
    j = []
    for i in range(y):
        # print(l[i]) # prints each element from the list.
        new.append(l[i]) # works but doesn't nest all the elements. Elements 0 and 1 are still unnested in new list.
        index +=1
        j.append(new)
        
    # print(new, '- This is the new list.')
    print('APPENDED NEW LIST TO j ', j)
    print(len(j[i]))

unpack_list(think)

--Date: Jan 2021-->
num_elements = len(set(l)) # 030121: TypeError: unhashable type: list. looks like you can't use set function on nested lists.
    
# this function does not work for lilst (l) bc of un-nested int element (1) in list
# unpack the list first and convert it to a string?
# 030121: maybe use set function
# https://stackabuse.com/python-get-number-of-elements-in-a-list/

def listLength2():
    i = 0
    while i < len(l):
        x = len(l[i])
        print('The length of element:', [i], ' is:', (x))
        i +=1

listLength2()       
# listLength()

# print(len(e[0]))
# print(len(e[2]))

'''
# this prints lenght of each element in the list
def listLength():
    i = 0
    while i < len(e):
        x = len(e[i])
        print('The length of element:', [i], ' is:', (x))
        i +=1
'''

# print(len(l)) # length of whole list
# print(len(l[1])) # length of nested list [1] - error: int has no len.
# print(len(str(l[1]))) # provides correct output for list [1]
# print(len(l[2])) # length of nested list [2]
# print(len(l[3])) # len of third element
# print(len(str(l[3]))) # incorrect output for list [3] - output = 12?
# print(len(l[2]))
